# Author: Khrisna Kamarga
# This program reads the csv file generated by the calibration script and is to be passed to the main Test Rig
# controller such that the Test Rig can skip the calibration to perform feed forward control.

import csv  # library to read the .csv file


class CalibrationMap:
    # initializes the class with empty x and y map with size row x col
    def __init__(self, col, row):
        self.x_map = [[[] for i in range(col)] for j in range(row)]
        self.y_map = [[[] for i in range(col)] for j in range(row)]
        self.col = col
        self.row = row

    # loads the files x_name and y_name to their respective maps
    def load(self, x_name, y_name):
        self.x_map = load(self.row, self.col, x_name)
        self.y_map = load(self.row, self.col, y_name)

    # prints the X and Y calibration map to verify with the actual .csv file
    def check(self):
        print("X calibration map: ", self.x_map)
        print("Y calibration map: ", self.y_map)


# loading the information from the <filename>.csv to the class
def load(col, row, filename):
    calibration_map = [[[] for i in range(col)] for j in range(row)]
    with open(filename) as csvfile:
        readCSV = csv.reader(csvfile, delimiter=',')
        xindex = 0
        for row in readCSV:
            yindex = 0
            for col in row:
                calibration_map[xindex][yindex] = col
                yindex += 1
            xindex += 1
    return calibration_map


if __name__ == '__main__':
    left_eye = CalibrationMap(4, 6)
    left_eye.load('left_x.csv', 'right_x.csv')
    left_eye.check()
